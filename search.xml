<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Ubuntu环境配置]]></title>
    <url>%2F2018%2F06%2F02%2Fubuntu%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[1 原由由于高级并行程序设计这门课程需要用到Linux环境，手头上的Ubuntu版本比较老了14.04，在不用sniper来测功耗之后，也没有停留在14的必要了，所以趁着这次机会升级下系统，并且把编程环境重新配置一下。 2 过程2.1 环境硬件：联想T430s，i5-3320M(2.6GHz)双核四线程处理器，12GB内存，集成显卡，SSD1：Intel 520s 180GB（SATA3），SSD2：建兴 LMT-32GB（MSATA）； 软件： 主系统Win7（SSD1），副系统Ubuntu14.04（SSD2），两个系统双硬盘，启动信息写在各自硬盘上，在启动的时候不关联，选择不同的硬盘进入不同的系统，最大程度上避免重装系统造成的影响； 工具：16GB的U盘，16.04的ISO，Rufus2.18。 2.2 分区可以在WIn下分区，也可以在Ubuntu安装的时候再进行，这次我们采用的是安装时候进行。一般意义需要分出4个分区，分别用于Ubuntu系统分区/（安装系统和软件）、交换分区Swap （即虚拟内存分区，内存大可以不分配）、引导分区/boot （即逻辑引导分区，本次不需要，boot分区主要为多系统引导，LVM、Raid，加密以及系统崩溃厚的抢救恢复，本次安装不进行分区划分）、文档分区/home（个人文件分区，类似于Win下“我的文档”，本次不区分）。 小硬盘，虚拟机或者是初学者的话，建议就分出系统分区即可，进阶的时候或者在服务器上可以把home、 /boot、swap和/Var（主要放置系统执行过程中经常变化的文件，例如缓存（cache）或者是随时更改的登录文件log file。 如果计算机主要是提供网页服务，或者是数据库，那/var会大量增加，最好能够把/var额外分割出来）。 2.3 制作启动U盘在Win下利用Rufus选中U盘盘符之后，勾选“创建一个启动盘使用”选项，并点击后面的光驱小图标选择ISO 镜像文件，没特殊需求的话，取消检查设备坏块、勾选快速格式化，点击开始进行启动盘的制作（下图）。 2.4 安装重启之后通过U盘引导，进入live系统, 双击桌面“安装Ubuntu”开始安装，选择语言后进入“安装类型”选项，选择“其他选项”,进行自主分区，本次将划分出的分区全部分配给/主分区，文件格式采用ext4。 在“启动引导器的设备”下拉菜单中，本次不通过boot引导，选择硬盘根目录，即/dev/sdb。连续下一步，选择键盘、设置用户名密码，等待全部安装完毕。 2.5 配置环境2.5.1 更换更新源1sudo timedatectl set-local-rtc 1 在Vim中dd100，删除掉原先的更新源，i进入Insert模式，将代码粘贴进去，Esc退出Insert模式，：进入命令行，输入wq 回车 写入并退出。 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse 如果装完之后发现Ubuntu时差8小时 1sudo timedatectl set-local-rtc 1 2.5.2 删除无用软件、更新123456789101112#libreoffice 不好用杀之，后续安装wps凑合用sudo apt-get remove libreoffice-common #Amazon链接好烦人，杀之sudo apt-get remove unity-webapps-common #还有一堆 杀杀杀sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku landscape-client-ui-install onboard deja-dup #干掉这么多，自动清理下sudo apt-get autoremove#更新源sudo apt upgrade#升级软件sudo apt-get update 安装编译器，和常用依赖库，16默认的gcc g++似乎都是5.4 sudo apt-get install build-essential 2.5.3 软件安装（1）搜狗输入法 搜狗拼音官方直接下载 123sudo apt-get install -fsudo dpkg -i sogou_pinyin_linux_1.0.0.0021_i386.debreboot （2）PDF阅读器（Foxit） 12tar -zxvf FoxitReader2.4.1.0609_Server_x64_enu_Setup.run.tar.gz./FoxitReader.enu.setup.2.4.1.0609\(r08f07f8\).x64.run （3）Pycharm（16.04内置了python2和python3，配置的时候可以直接用） 123sudo add-apt-repository ppa:viktor-krivak/pycharmsudo apt updatesudo apt install pycharm （4）Vim（这个还不太会用，常用subl3） 1sudo apt-get install vim （5）Chrome（神器，几乎所有常用插件能同步过来） 1234#能在线安装就不下载包离线安装wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" &gt;&gt; /etc/apt/sources.list.d/google.list'suo apt-get update &amp;&amp; sudo apt-get install google-chrome-stable （6）WPS（linux下能用的office类） 1sudo apt-get install wps-office （7）Sublime Text3（非常好用的编辑器，插件丰富，我主要拿来win10下+WSL用，插件配置下一篇再写） 123sudo add-apt-repository ppa:webupd8team/sublime-text-3 sudo apt-get update sudo apt-get install sublime-text （8）git（程序员专用，git的设置在网站搭建那篇文章里再讲） sudo apt-get install git （9）MPV（简单的影音播放器） apt-get install mpv （10）Shutter截图工具（做实验，截图作报告要用） 123sudo add-apt-repository ppa:shutter/ppa sudo apt-get update sudo apt-get install Shutter （11）Microsoft Windows Fonts微软字体库 Microsoft Windows Fonts微软字体库包含了Times_New_Roman和Courier_New等字体。安装 1sudo apt-get install ttf-mscorefonts-installer1 然后会提示微软的用户协议向导 单击“确定OK”继续,单击“YES是”接受微软协议 在安装字体后，我们需要使用命令来更新字体缓存： 1sudo fc-cache -f -v （12）为知笔记（唯一可以在linux，mac，win下同步的笔记工具，只能VIP年费60） 123sudo add-apt-repository ppa:wiznote-team sudo apt-get update sudo apt-get install wiznote （13）网易云音乐 下载地址 http://music.163.com/#/download 下载后deb包直接安装 （14）有道词典 划词翻译，在inux版下能用的貌似只有着一个 下载地址 http://cidian.youdao.com/multi.html （15）rarlinux（解压缩软件） 官方网址：http://www.rarlab.com/下载对应的源码包也可以直接用wget获取 1wget http://www.rarlab.com/rar/rarlinux-5.2.1.tar.gz1 编译安装 1234tar -zxvf rarlinux-5.2.1.tar.gzcd rarlinuxmakemake install （16）MPICH（吃饭的家伙，研究生生涯就指着这个活了） 在Ubuntu下安装MPI，参考了直接apt-get安装 和tar.gz源码安装 两种方式。网上了解到apt-get安装具有一些问题，于是我在MPI网站上下载了源码包mpich-3.2.1.tar.gz，然后解压。 sudo tar -zxvf mpich-3.2.1.tar.gz 解压完后,进行配置(我的配置安装位置为 /home/MPICH2) ./configure -prefix= /home/MPICH2 结果报错如下： “No Fortran 77 compiler found. If you don’t need to build any Fortran programs, you can disable Fortran support using –disable-f77 and –disable-fc. If you do want to build Fortran programs, you need to install a Fortran compiler such as gfortran or ifort before you can proceed.” 安装gfortran： sudo apt-get install gfortran 问题解决 配置完成后，执行编译和安装工作 sudo make &amp;&amp; sudo make install 1 安装完成后，添加环境变量 sudo vim ~/.bashrc 在最后添上下面几句话 123export MPI_ROOT=/home/MPICH2export PATH=$MPI_ROOT/bin:$PATHexport MANPATH=$MPI_ROOT/man:$MANPATH 这里有个很着重的地方，因为我在Ubuntu下采用的是zsh终端./bashrc 是写给bash 看的，而我的用的是zsh 所以要配置./zshrc文件一定要修改对，并且还要source 一下才能正常使用 2 安装完成后，添加环境变量 sudo gedit ~/.zshrc 在最后添上下面几句话 123export MPI_ROOT=/home/MPICH2export PATH=$MPI_ROOT/bin:$PATHexport MANPATH=$MPI_ROOT/man:$MANPATH source ~/.zshrc 这样就可以在zsh下使用mpirun 和mpicc mpicxx了。 MPI的具体测试和使用，也会再开一篇。 3 结束语磕磕绊绊算是把第一篇博客写完了的，最近考试完计划是把MPICH、sublime text、zsh、win10下的WSL、git.io博客的搭建还有天河超算节点的笔记都再写成博客，下一篇先写博客搭建和美化好了。]]></content>
      <categories>
        <category>作业</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
</search>
